apiVersion: apps/v1
kind: Deployment
metadata:
  name: sqlproxy-blue
spec:
  replicas: 3
  selector:
    matchLabels:
      app: sqlproxy
      environment: blue
  template:
    metadata:
      labels:
        app: sqlproxy
        environment: blue
    spec:
      containers:
      - name: sqlproxy
        image: ghcr.io/teeksss/sqlproxy:latest
        ports:
        - containerPort: 8000
        env:
        - name: ENVIRONMENT
          value: "production"
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sqlproxy-green
spec:
  replicas: 0  # Initially scaled down
  selector:
    matchLabels:
      app: sqlproxy
      environment: green
  template:
    metadata:
      labels:
        app: sqlproxy
        environment: green
    spec:
      containers:
      - name: sqlproxy
        image: ghcr.io/teeksss/sqlproxy:latest
        ports:
        - containerPort: 8000
        env:
        - name: ENVIRONMENT
          value: "production"
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: sqlproxy-prod
spec:
  selector:
    app: sqlproxy
    environment: blue  # Initially points to blue
  ports:
  - port: 80
    targetPort: 8000
  type: ClusterIP