apiVersion: apps/v1
kind: Deployment
metadata:
  name: sqlproxy-production
  namespace: sqlproxy
  labels:
    app: sqlproxy
    environment: production
spec:
  replicas: 3
  selector:
    matchLabels:
      app: sqlproxy
      environment: production
  template:
    metadata:
      labels:
        app: sqlproxy
        environment: production
    spec:
      containers:
      - name: sqlproxy
        image: ghcr.io/teeksss/sqlproxy:${IMAGE_TAG}
        ports:
        - containerPort: 8000
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: sqlproxy-db-credentials-prod
              key: host
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: sqlproxy-db-credentials-prod
              key: port
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: sqlproxy-db-credentials-prod
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sqlproxy-db-credentials-prod
              key: password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: sqlproxy-db-credentials-prod
              key: database
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: sqlproxy-config-prod
              key: redis-host
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: sqlproxy-config-prod
              key: redis-port
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "WARNING"
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: sqlproxy-production
  namespace: sqlproxy
spec:
  selector:
    app: sqlproxy
    environment: production
  ports:
  - port: 80
    targetPort: 8000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sqlproxy-production-ingress
  namespace: sqlproxy
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - api.sqlproxy.example.com
    secretName: sqlproxy-production-tls
  rules:
  - host: api.sqlproxy.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: sqlproxy-production
            port:
              number: 80