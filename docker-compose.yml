version: '3.8'

services:
  sqlproxy:
    build:
      context: ./SQLProxy
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - DB_HOST=postgres
      - REDIS_HOST=redis
      - LOG_LEVEL=info
    volumes:
      - ./logs:/app/logs
      - ./configs:/app/configs
    networks:
      - app_network

  mcp_server:
    build:
      context: ./MCP-SERVER
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - SQLPROXY_HOST=sqlproxy
      - SQLPROXY_PORT=5000
    depends_on:
      - sqlproxy
    volumes:
      - ./logs:/app/logs
      - ./configs:/app/configs
    networks:
      - app_network

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_PASSWORD=your_password
      - POSTGRES_DB=sqlproxy
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  redis:
    image: redis:alpine
    volumes:
      - redis_data:/data
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: