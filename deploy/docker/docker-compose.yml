version: '3.8'

services:
  postgres:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=sql_proxy
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ../..
      dockerfile: deploy/docker/Dockerfile.backend
    depends_on:
      - postgres
      - redis
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/sql_proxy
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LDAP_SERVER_URI=${LDAP_SERVER_URI}
      - LDAP_BASE_DN=${LDAP_BASE_DN}
      - LDAP_USER_SEARCH_BASE=${LDAP_USER_SEARCH_BASE}
      - LDAP_GROUP_SEARCH_BASE=${LDAP_GROUP_SEARCH_BASE}
      - SQL_PROXY_USERNAME=${SQL_PROXY_USERNAME}
      - SQL_PROXY_PASSWORD=${SQL_PROXY_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
    volumes:
      - ../../backend:/app

  frontend:
    build:
      context: ../..
      dockerfile: deploy/docker/Dockerfile.frontend
    ports:
      - "3000:80"
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data: